{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["import axios from 'axios';\n\nexport async function getImage(userValue, page = 1){\n    const BASE_URL = 'https://pixabay.com/api/';\n    const params = new URLSearchParams({\n        key: '48836479-4489c2f77adf14865904c6664',\n        q: userValue,\n        image_type: 'photo',\n        orientation: 'horizontal',\n        safesearch: true,\n        page: page,\n        per_page: 40,\n    });\n    const url = `${BASE_URL}?${params}`;\n    \n        try {\n          const response = await axios.get(url);\n          if(response.data.hits.length === 0){\n            return [];\n          }else {\n            return response.data;\n          }\n        } catch (error) {\n            console.error('Error fetching images:', error);\n            throw error;\n        }\n}\n","export function createMarkup(images) {\n    return images.map(image => `\n      <div class=\"card\">\n        <div class=\"img-cont\">\n            <a class=\"gallery-link\" href=\"${image.largeImageURL}\">\n                <img src=\"${image.webformatURL}\" alt=\"${image.tags}\">\n            </a>\n        </div>\n        <div class=\"describtion-cont\">\n            <div class=\"block\">\n                <h4 class=\"title\">Likes</h4>\n                <p class=\"number\">${image.likes}</p>\n            </div>\n            <div class=\"block\">\n                <h4 class=\"title\">Views</h4>\n                <p class=\"number\">${image.views}</p>\n            </div>\n            <div class=\"block\">\n                <h4 class=\"title\">Comments</h4>\n                <p class=\"number\">${image.comments}</p>\n            </div>\n            <div class=\"block\">\n                <h4 class=\"title\">Downloads</h4>\n                <p class=\"number\">${image.downloads}</p>\n            </div>\n        </div>\n        </div>\n    `).join(''); \n  }","import iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nimport SimpleLightbox from \"simplelightbox\";\nimport \"simplelightbox/dist/simple-lightbox.min.css\";\n\nimport { getImage } from \"./js/pixabay-api\";\nimport { createMarkup } from \"./js/render-functions\";\n\n\nconst refs = {\n    form: document.querySelector('.form'),\n    imagesContainer: document.querySelector('.images-container'),\n    input: document.querySelector('.input'),\n    loader: document.querySelector('.loader'),\n    loadBtn: document.querySelector('button[type=\"button\"]'),\n};\n\n\nconst lightbox = new SimpleLightbox('.gallery-link');\nlet page = 1;\nlet currentQuery = '';\n\n\nrefs.form.addEventListener('submit', async (e) => {\n    e.preventDefault();\n   \n    const userValue = refs.input.value.trim();\n    \n    if (userValue === '') {\n        iziToast.show({\n            backgroundColor: 'red',\n            position: 'topRight',\n            message: 'The input field cannot be empty'\n        });\n        return;\n    }\n\n    page = 1;\n    currentQuery = userValue;\n    refs.loadBtn.classList.add('hidden'); \n\n    refs.imagesContainer.innerHTML = ''; \n    refs.loader.innerHTML = 'Please wait, the images are loading...'; \n\n         try {\n           const data = await getImage(userValue, page);\n           const images = data.hits;\n           if (images.length === 0) {\n        iziToast.show({\n            backgroundColor: 'orange',\n            position: 'topRight',\n            message: 'Sorry, there are no images matching your search query. Please try again!'\n        });\n        refs.imagesContainer.innerHTML = '';\n        return;\n        }\n          refs.imagesContainer.innerHTML = createMarkup(images);\n          lightbox.refresh();\n\n          if (images.length === 40) {\n            refs.loadBtn.classList.remove('hidden'); \n        } else {\n            refs.loadBtn.classList.add('hidden'); \n        }\n\n        } catch (error) {\n      iziToast.show({\n                backgroundColor: 'red',\n                position: 'topRight',\n                message: 'Failed to fetch images. Try again later!'\n            });\n      } finally{\n        setTimeout(() => refs.loader.innerHTML = \"\", 1500);\n      }\n        \n    e.target.reset();\n});\n\n\nrefs.loadBtn.addEventListener('click', async ()=>{\n   page += 1;\n    refs.loader.innerHTML = 'Loading more images...';\n\n    try {\n        const data = await getImage(currentQuery, page);\n        const images = data.hits;\n        if(images.length === 0 || page * 40 >= data.totalHits){\n             refs.loadBtn.classList.add('hidden');\n            iziToast.show({\n                backgroundColor: 'orange',\n                position: 'topRight',\n                message: 'We are sorry, but you have reached the end of search results.'\n            });\n            return;\n        }  \n        if (images.length > 0) {\n            refs.imagesContainer.insertAdjacentHTML('beforeend', createMarkup(images));\n            lightbox.refresh();\n        }\n\n        const cardHeight = document.querySelector('.img-cont')?.getBoundingClientRect().height || 0;\n        window.scrollBy({\n            top: cardHeight * 2,\n            behavior: 'smooth'\n        });\n    } catch (error) {\n        iziToast.show({\n            backgroundColor: 'red',\n            position: 'topRight',\n            message: 'Failed to fetch images. Try again later!'\n        })\n    } finally{\n        setTimeout(() => refs.loader.innerHTML = \"\", 1500);\n    }\n});"],"names":["getImage","userValue","page","BASE_URL","params","url","response","axios","error","createMarkup","images","image","refs","lightbox","SimpleLightbox","currentQuery","e","iziToast","data","cardHeight","_a"],"mappings":"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"}